How did viewing a diff between two versions of a file help you see the bug that
was introduced?
It only showed me the lines that had changes. Reducing the time needed to find
the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
I would save a lot of time when debugging. I would also be able to see how code
techniques and organization evolves over the course of a program.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
Docs does?
Cons- you have to remember to commit. You also have to know when is a good time
to commit to make comparisons easier.
Pros- You can commit at logical points of progress in your code. This makes it
extremely easy to compare when needed.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
VCS save files together or separately based on the type of files each VCS is
most commonly used for.

How can you use the commands git log and git diff to view the history of files?
Git log allows me to view all the commits along with their comments on what was
changed. I can then use Git diff to compare two of the commits and see exactly
what was added/removed.

How might using version control make you more confident to make changes that
could break something?
You're free to change anything that may break something because you can revert
to a previous commit where everything worked. As well as seeing the differences
in code that may have caused the break.

Now that you have your workspace set up, what do you want to try using Git for?
I want to try using Git to save commits of my code.
